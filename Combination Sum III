Sample input and output:
Example 1:

Input: k = 3, n = 7
Output: [[1,2,4]]
Explanation:
1 + 2 + 4 = 7
There are no other valid combinations.
Example 2:

Input: k = 3, n = 9
Output: [[1,2,6],[1,3,5],[2,3,4]]
Explanation:
1 + 2 + 6 = 9
1 + 3 + 5 = 9
2 + 3 + 4 = 9
There are no other valid combinations.
Example 3:

Input: k = 4, n = 1
Output: []
Explanation: There are no valid combinations.
Using 4 different numbers in the range [1,9], the smallest sum we can get is 1+2+3+4 = 10 and since 10 > 1, there are no valid combination.

Code :
class Solution {
    List<List<Integer>> subsets=new ArrayList<>();
    public List<List<Integer>> combinationSum3(int k, int n) {
        
        gS(1,k,n,new ArrayList<>());
        return subsets;
    }
    void gS(int start,int k,int n,List<Integer> curr){
        if(curr.size()==k){
            if(n==0) subsets.add(new ArrayList<>(curr));
            return;
        }
        for(int i=start;i<=9;i++){
            curr.add(i);//[1]
            gS(i+1, k, n-i, curr);
            curr.remove(curr.size()-1);
        }
    }
    
    CONCEPT OF BACKTRACKING
}
